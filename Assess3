1. Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,EMP_DESC_CNT,EMP_PLACE_CNT
EMP_DESC_CNT --- > No Of Employess Each Designation
EMP_PLACE_CNT ---> No Of Employess Each Place
List All the Employees in The employess
If there is null in Place or Designation show as 'OTHERS'

=>mysql> select e.emp_id,e.emp_name,
    -> coalesce(d.desc_name,'others') as DESC_NAME,
    -> coalesce(pl.place_desc,'others') as PLACE_DESC,count(*) over (partition by d.desc_name) EMP_DESC_CNT,
    -> count(*) over (partition by pl.place_desc) EMP_PLACE_CNT
    -> from empa e left join desig d on e.desc_id=d.desc_id
    -> left join place pl on e.place_id=pl.place_id
    -> order by emp_id;
+--------+---------------+-----------+------------+--------------+---------------+
| emp_id | emp_name      | DESC_NAME | PLACE_DESC | EMP_DESC_CNT | EMP_PLACE_CNT |
+--------+---------------+-----------+------------+--------------+---------------+
|      1 | Vijaykumar    | ASE       | Chennai    |            3 |             2 |
|      3 | Raja          | SE        | Hyderabad  |            3 |             3 |
|      3 | Abhisheksingh | ASE       | Mexico     |            3 |             1 |
|      4 | Santhosh      | SSE       | Bangalore  |            2 |             2 |
|      5 | Kribakaran    | SE        | Hyderabad  |            3 |             3 |
|      6 | Divya         | TL        | Newyork    |            1 |             2 |
|      7 | Suganya       | ASE       | Hyderabad  |            3 |             3 |
|      8 | Shalini       | SE        | Bangalore  |            3 |             2 |
|      9 | Avantika      | SSE       | Chennai    |            2 |             2 |
|     10 | Ajay          | AM        | others     |            1 |             5 |
|     11 | Tamilselvan   | others    | others     |            5 |             5 |
|     12 | Vinodha       | others    | others     |            5 |             5 |
|     13 | Karthick      | others    | Newyork    |            5 |             2 |
|     14 | Sanjay        | others    | others     |            5 |             5 |
|     15 | Meera         | others    | others     |            5 |             5 |
+--------+---------------+-----------+------------+--------------+---------------+
15 rows in set (0.04 sec)

2. Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME
List All the Employees who is working in 'Data' or 'Cloud' project. 
 
=>mysql> select e.emp_id,e.emp_name,
    -> COALESCE(d.desc_name,'others') as desc_name,
    -> COALESCE (pl.place_desc,'others') as place_name,
    -> COALESCE(p.proj_name,'others') as proj_name
    -> from empa e left join desig d on e.desc_id=d.desc_id
    -> left join place pl on e.place_id=pl.place_id
    -> inner join proj p on e.proj_id=p.proj_id
    -> where p.proj_name like '%data%' or p.proj_name like '%cloud%' order by emp_id;
+--------+---------------+-----------+------------+-----------------+
| emp_id | emp_name      | desc_name | place_name | proj_name       |
+--------+---------------+-----------+------------+-----------------+
|      1 | Vijaykumar    | ASE       | Chennai    | Pepsi cloud     |
|      3 | Raja          | SE        | Hyderabad  | Microsoft cloud |
|      3 | Abhisheksingh | ASE       | Mexico     | Amazon data     |
|      4 | Santhosh      | SSE       | Bangalore  | Cigna data      |
|      5 | Kribakaran    | SE        | Hyderabad  | ASG data        |
|      6 | Divya         | TL        | Newyork    | Pepsi cloud     |
|      7 | Suganya       | ASE       | Hyderabad  | Microsoft cloud |
|      8 | Shalini       | SE        | Bangalore  | ASG data        |
|      9 | Avantika      | SSE       | Chennai    | Amazon data     |
|     13 | Karthick      | others    | Newyork    | ASG data        |
|     14 | Sanjay        | others    | others     | Amazon data     |
+--------+---------------+-----------+------------+-----------------+
11 rows in set (0.00 sec)


3. Fetch EMP_NAME,PLACE_DESC
Show only employees working as higest grade in each place, If two employees in same grade use minimum Place_id to pick one,  If two employees in same project use minimum Project_id to pick one,
Use DESC_ID, PLACE_ID & PROJECT_ID to define Grades 

=>mysql> select * from (
    -> select EMP_ID,EMP_NAME,
    -> coalesce(DESC_NAME,'others') as DESC_NAME,
    -> coalesce(PLACE_DESC,'others') as PLACE_DESC,
    -> coalesce(PROJ_NAME,'others') as PROJ_NAME,
    -> dense_rank() over (partition by e.place_id order by e.desc_id desc,e.proj_id ) rn
    -> from empa e  join desig d on e.desc_id=d.desc_id
    -> join place p on e.place_id=p.place_id
    -> join proj pp on e.proj_id=pp.proj_id)a where rn=1;
+--------+---------------+-----------+------------+-------------+----+
| EMP_ID | EMP_NAME      | DESC_NAME | PLACE_DESC | PROJ_NAME   | rn |
+--------+---------------+-----------+------------+-------------+----+
|      9 | Avantika      | SSE       | Chennai    | Amazon data |  1 |
|      4 | Santhosh      | SSE       | Bangalore  | Cigna data  |  1 |
|      5 | Kribakaran    | SE        | Hyderabad  | ASG data    |  1 |
|      3 | Abhisheksingh | ASE       | Mexico     | Amazon data |  1 |
|      6 | Divya         | TL        | Newyork    | Pepsi cloud |  1 |
+--------+---------------+-----------+------------+-------------+----+
5 rows in set (0.05 sec)



4. Fetch Salesman manger Name  & Customer Name 
Show Only the Priority Customer based on the Purchased Amount 

mysql> select sales_manager_name,cust_name from (
    -> select cust_name,s1.salesman_id,s1.sales_manager_id,
    -> s2.salesman_name sales_manager_name,purchased_amt,
    -> dense_rank() over (partition by s1.sales_manager_id order by purchased_amt desc)
    -> rn from customer c
    -> join salesman s1 on c.salesman_id=s1.salesman_id join salesman s2
    -> on s1.sales_manager_id=s2.salesman_id)sal
    -> where rn=1;
+--------------------+-----------+
| sales_manager_name | cust_name |
+--------------------+-----------+
| Abraham            | James     |
| Srinath            | Jyothi    |
| Vijay              | Dinesh    |
| Balaji             | Arun      |
+--------------------+-----------+
4 rows in set (0.02 sec)





5.Update the Purchased Monthly target for each sales person based on the Purchase amount 
mysql> update salesman s  join 
(select salesman_id,sum(purchased_amt)a from customer group by salesman_id)b
 on s.salesman_id=b.salesman_id and s.monthly_target<b.a set monthly_target=a;
Query OK, 2 rows affected (0.22 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from salesman;
+-------------+---------------+-----------+------------------+----------------+
| salesman_id | salesman_name | city      | sales_manager_id | monthly_target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           2 | Abraham       | Bangalore |                4 |          21000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |          15000 |
+-------------+---------------+-----------+------------------+----------------+
6 rows in set (0.00 sec)
